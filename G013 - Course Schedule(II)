vector<int> findSchedule(int numCourses, vector<pair<int, int>> &prerequisites)
{
    // Write your code here.
    vector<int> adj[numCourses+1];
    for(auto it:prerequisites) {
        int u = it.first;
        int v = it.second;
        adj[v].push_back(u);
    }
    int inDegree[numCourses+1] = {0};
    for(int i=0;i<=numCourses;i++) {
        for(auto it:adj[i]) {
            inDegree[it]++;
        }
    }
    queue<int> q;
    for(int i=1;i<=numCourses;i++) {
        if(inDegree[i]==0) {
            q.push(i);
        }
    }
    vector<int> ans;
    while(!q.empty()) {
        int node = q.front();
        q.pop();
        ans.push_back(node);
        for(auto it:adj[node]) {
            inDegree[it]--;
            if(inDegree[it]==0) 
            q.push(it);
        }
    }
    if(ans.size()!=numCourses) {
        return {};
    }
    else
    return ans;
}
