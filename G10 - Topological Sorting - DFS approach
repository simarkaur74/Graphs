#include <bits/stdc++.h> 
void dfs(int node,vector<int> adj[],stack<int>&st,vector<int>&vis) {
    vis[node] = 1;
    for(auto it:adj[node]) {
        if(!vis[it]) {
            dfs(it,adj,st,vis);
        }
    }
    st.push(node);
}
vector<int> topologicalSort(vector<vector<int>> &graph, int edges, int nodes) {
    // Write your code here!
    vector<int> adj[nodes];
    for(auto it:graph) {
        int u = it[0];
        int v = it[1];
        adj[u].push_back(v);
    }
    stack<int> st;
    vector<int> vis(nodes,0);
    for(int i=0;i<nodes;i++) {
        if(vis[i]==0) {
            dfs(i,adj,st,vis);
        }
    }
    vector<int> ans;
    while(!st.empty()) {
        int node = st.top();
        st.pop();
        ans.push_back(node);
    }
    return ans;
}
