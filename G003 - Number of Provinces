void dfs(int node,vector<int>&vis,vector<int>adj[]) {
    vis[node] = 1;
    for(auto it:adj[node]) {
        if(!vis[it]) {
            dfs(it,vis,adj);
        }
    }
}
int findNumOfProvinces(vector<vector<int>>& roads, int n) {
    // Write your code here.
    // What I need to calculate is the number of connected components here
    vector<int> adj[n];
    int cnt = 0;
    vector<int> vis(n,0);
    for(int i=0;i<n;i++) {
        for(int j=0;j<n;j++) {
            if(roads[i][j]==1) {
                adj[i].push_back(j);
                adj[j].push_back(i);
            }
        }
    }
    for(int i=0;i<n;i++) {
        if(!vis[i]) {
            cnt++;
            dfs(i,vis,adj);
        }
    }
    return cnt;
}
